{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","onShowClick","e","name","email","phone","className","onClick","style","cursor","bind","to","float","color","marginRight","Contacts","deleteContact","newContacts","Fragment","map","key","Header","branding","href","defaultProps","Test","console","log","nextProps","nextState","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","preventDefault","newContact","post","history","push","target","EditContact","match","params","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e233651.chunk.js","sourcesContent":["import React ,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context =React.createContext();\r\n\r\nconst reducer = (state, action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:state.contacts.filter(contact =>contact.id!==action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:[action.payload,...state.contacts]\r\n            };\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state ={\r\n        contacts: [\r\n            \r\n        ],\r\n        dispatch: action =>this.setState(state=>reducer(state,action))\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer =Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport propTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state ={\r\n        showContactInfo:false,\r\n\r\n    };\r\n\r\n    onDeleteClick =async (id,dispatch)=>{\r\n        try{\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }catch(e){\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    onShowClick =e=>{\r\n        this.setState ={\r\n            showContactInfo:false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { id,name,email,phone }=this.props.contact;\r\n        const {showContactInfo} =this.state;\r\n        return (\r\n            <Consumer>\r\n                {value=>{\r\n                    const {dispatch} =value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                <h4>\r\n                    {name} {' '}<button onClick={()=>this.setState({\r\n                        showContactInfo:!this.state.showContactInfo\r\n                    }\r\n                    )}\r\n                    className=\"fas fa-sort-down\"\r\n                    style={{cursor:'pointer'}}\r\n                    />\r\n                <button\r\n                    onClick={this.onDeleteClick.bind(this,id,dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                    <button className=\"fas fa-pencil-alt\"\r\n                        style = {{cursor:'pointer',\r\n                                  float:'right',\r\n                                  color:'black',\r\n                                  marginRight:'1rem'}} />\r\n                </Link>\r\n                </h4>\r\n                {showContactInfo?(\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>):null}\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\nContact.propTypes={\r\n    contact: propTypes.object.isRequired,\r\n};\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from './Contact.js'\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component{\r\n    deleteContact=(id)=>{\r\n        const {contacts}=this.state;\r\n        const newContacts =contacts.filter(contact => contact.id!==id);\r\n        this.setState({\r\n            contacts:newContacts\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Consumer>\r\n                {value=>{\r\n                    const {contacts}=value\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className='display-4 mb-2'>\r\n                            <span\r\n                                className=\"text-danger\">Contact</span>List\r\n                            </h1>\r\n                        {contacts.map(contact =>(\r\n                        <Contact  \r\n                        key = {contact.id} \r\n                        contact={contact}\r\n                        \r\n                    />\r\n                ))}\r\n            </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header= props =>{\r\n    const {branding}=props;\r\n    return (\r\n        <nav className =\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className =\"container\">\r\n                <a href=\"/\" className =\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n            </div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className =\"nav-link\">\r\n                        <i className='fas fa-home'></i>Home\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/contact/add\" className =\"nav-link\">\r\n                        <i className='fas fa-plus'></i>Add\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/about\" className =\"nav-link\">\r\n                        <i className='fas fa-question'></i>About\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps={\r\n    branding: \"My App\"\r\n};\r\nHeader.propTypes={\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default () =>{\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\n\r\nexport default ()=>{\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'>\r\n                <span className='text-danger'>404</span> \r\n                Page Not Found</h1>\r\n            <p className='lead'>Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    componentDidMount(){\r\n        console.log('componentDidMount...');\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log('componentWillMount...');\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('componentDidUpdate...');\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps,nextState){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Test Component</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst TextInputGroup= ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n})=>{\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n                <input\r\n                    type={type}\r\n                    name={name}\r\n                    className={classnames('form-control form-control-lg',{'is-invalid':error})}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                {error && <div className='invalid-feedback'>{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes={\r\n    label:PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps ={\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state ={\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    \r\n\r\n    onSubmit=async (dispatch,e)=>{\r\n        e.preventDefault();\r\n        const { name,email,phone }=this.state;\r\n        if (name=== \"\"){\r\n            this.setState({errors:{ name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email=== \"\"){\r\n            this.setState({errors:{ email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if (phone=== \"\"){\r\n            this.setState({errors:{ phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n        const newContact={\r\n            name, \r\n            email,\r\n            phone,\r\n        };\r\n        \r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n        dispatch({type:'ADD_CONTACT',payload:res.data});\r\n\r\n        \r\n\r\n        \r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    onChange=(e)=>{this.setState({[e.target.name]: e.target.value})}\r\n\r\n    render(){\r\n        const {name,email,phone,errors}=this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value=>{\r\n                    const { dispatch } =value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                        <TextInputGroup\r\n                            label='Name'\r\n                            name='name'\r\n                            placeholder=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n                        <TextInputGroup\r\n                            label='Email'\r\n                            name='email'\r\n                            type ='email'\r\n                            placeholder=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n                        <TextInputGroup\r\n                            label='Phone'\r\n                            name='phone'\r\n                            placeholder=\"Enter Phone\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n                        <input \r\n                            type=\"submit\" \r\n                            value=\"Add Contact\"\r\n                            className=\"btn btn-light btn-block\"\r\n                        />\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state ={\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const {id}=this.props.match.params;\r\n        const res =await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone,\r\n        });\r\n    }\r\n\r\n    onSubmit=async (dispatch,e)=>{\r\n        e.preventDefault();\r\n        const { name,email,phone }=this.state;\r\n        if (name=== \"\"){\r\n            this.setState({errors:{ name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email=== \"\"){\r\n            this.setState({errors:{ email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if (phone=== \"\"){\r\n            this.setState({errors:{ phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n        const newContact={\r\n            name, \r\n            email,\r\n            phone,\r\n        };\r\n        \r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n        dispatch({type:'ADD_CONTACT',payload:res.data});\r\n\r\n        \r\n\r\n        \r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    onChange=(e)=>{this.setState({[e.target.name]: e.target.value})}\r\n\r\n    render(){\r\n        const {name,email,phone,errors}=this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value=>{\r\n                    const { dispatch } =value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                        <TextInputGroup\r\n                            label='Name'\r\n                            name='name'\r\n                            placeholder=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n                        <TextInputGroup\r\n                            label='Email'\r\n                            name='email'\r\n                            type ='email'\r\n                            placeholder=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n                        <TextInputGroup\r\n                            label='Phone'\r\n                            name='phone'\r\n                            placeholder=\"Enter Phone\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n                        <input \r\n                            type=\"submit\" \r\n                            value=\"Update Contact\"\r\n                            className=\"btn btn-light btn-block\"\r\n                        />\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React,{Component} from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport {Provider} from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider>\n        < Router >\n      <div className = \"App\">\n        <Header branding='Contact Manager'/>\n        <div className='container'>\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/contact/add\" component={AddContact} />\n            <Route exact path=\"/about/:id\" component={About} />\n            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}